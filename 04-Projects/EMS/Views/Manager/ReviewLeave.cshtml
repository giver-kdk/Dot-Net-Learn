@using EMS.Domain.Enums
@model List<EMS.Domain.Models.LeaveRequest>

@{
    ViewData["Title"] = "Review Leave";
}

@* Style: site.css -> Review Leave Style *@

<div class="leave__req--container">
    <select id="filter" class="form-control" style="width: 150px;">
        <option value="Pending">Pending</option>
        <option value="Closed">Closed</option>
    </select>
</div>

<div class="leave__req--cards">
    @foreach (var leaveRequest in Model)
    {
        <div class="leave__req--card">
            <div class="leave__req--card-header">
                <span class="request-date">@leaveRequest.RequestDate.ToString("yyyy-MM-dd")</span>
                <span class="status @GetStatusClass(leaveRequest.Status)">@leaveRequest.Status.ToString()</span>
            </div>
            <div class="leave__req--card-body">
                <p><strong>Employee:</strong> @leaveRequest.Employee.FullName</p>
                <p><strong>Position:</strong> @leaveRequest.Employee.Position</p>
                <p><strong>Leave Type:</strong> @leaveRequest.LeaveType</p>
                <p><strong>Start Date:</strong> @leaveRequest.StartDate.ToString("yyyy-MM-dd")</p>
                <p><strong>End Date:</strong> @leaveRequest.EndDate.ToString("yyyy-MM-dd")</p>
                <p><strong>Number of Days:</strong> @((leaveRequest.EndDate - leaveRequest.StartDate).Days + 1)</p>
                <p class="reason collapsed" onclick="toggleReason(this)">@leaveRequest.Reason</p>
                @if (ViewBag.Filter == "Closed" && leaveRequest.Status == LeaveStatus.Rejected)
                {
                    <p><strong>Rejection Reason:</strong> @leaveRequest.RejectionReason</p>
                }
            </div>
            <div class="leave__req--card-footer">
                @if (ViewBag.Filter == "Pending")
                {
                    <button class="btn btn-success" onclick="acceptLeaveRequest(@leaveRequest.Id)">Accept</button>
                    <button class="btn btn-danger" onclick="rejectLeaveRequest(@leaveRequest.Id)">Reject</button>
                }
            </div>

        </div>
    }
</div>

<!-- DevExtreme Popup for Rejection Reason -->
<div id="reject-popup"></div>

<script>
    function toggleReason(element) {
        element.classList.toggle("collapsed");
    }

    document.getElementById("filter").addEventListener("change", function () {
        window.location.href = "@Url.Action("ReviewLeave")?filter=" + this.value;
    });

    document.getElementById("filter").value = "@ViewBag.Filter";

function acceptLeaveRequest(leaveRequestId) {
    $.ajax({
        url: `/Manager/AcceptLeaveRequest?leaveRequestId=${leaveRequestId}`,
        type: 'POST',
        success: function() {
                $.notify("Leave request accepted successfully!", "success");
                
                refreshLeaveRequests();
                // window.location.reload();
        },
        error: function() {
            $.notify("Failed to accept leave request.", "error");
        }
    });
}

    function rejectLeaveRequest(leaveRequestId) {
        // Initialize DevExtreme Popup
        $("#reject-popup").dxPopup({
            title: "Enter Rejection Reason",
            visible: false,
            width: 400,
            height: 300,
            contentTemplate: function (contentElement) {
                contentElement.append(`
                    <textarea id="rejection-reason" style="width: 100%; height: 150px;"></textarea>
                    <button id="submit-reject" class="btn btn-danger" style="margin-top: 16px;">Submit</button>
                `);

                $("#submit-reject").click(function () {
                    const rejectionReason = $("#rejection-reason").val();
                    if (!rejectionReason) {

                        $.notify("Please enter a rejection reason.", "info");
                        return;
                    }

                    fetch(`/Manager/RejectLeaveRequest?leaveRequestId=${leaveRequestId}&rejectionReason=${encodeURIComponent(rejectionReason)}`, { method: "POST" })
                        .then(response => {
                            if (response.ok) {
                                $.notify("Leave requets rejected successfully", "success");

                                refreshLeaveRequests();
                                    // window.location.reload();        // Refresh the page
                            } else {
                                $.notify("Failed to reject leave request.", "error");
                            }
                        });

                    $("#reject-popup").dxPopup("hide");
                });
            }
        });

        $("#reject-popup").dxPopup("show");
    }

    function refreshLeaveRequests() {
        const filter = document.getElementById("filter").value;

        $.ajax({
            url: '@Url.Action("ReviewLeavePartial", "Manager")',        
            type: 'GET',
            data: { filter: filter },
            success: function(data) {
				$('.leave__req--cards').empty();            // Remove all childs of the container
                $('.leave__req--cards').append(data);       // Add updated partial view childrens on the container
            },
            error: function() {
                $.notify("Failed to refresh leave requests.", "error");
            }
        });
    }
</script>

@functions {
    public string GetStatusClass(LeaveStatus status)
    {
        return status switch
        {
            LeaveStatus.Approved => "status-approved",
            LeaveStatus.Rejected => "status-rejected",
            LeaveStatus.Pending => "status-pending",
            _ => ""
        };
    }
}